<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Download</title><link href="styles/graphSynthStyle.css" rel="stylesheet" type="text/css" /><style type="text/css"></style>
</head><body><div id="container"><div id="masthead"><a  style="border-width:0" href="http://www.engr.utexas.edu/"><img alt="UT Austin and the College of Engineering" src="images/UTCOEemblem.jpg" style="float: right" class="UT_COE_emblem" /></a> <h1>GraphSynth</h1><h5>Version 1.7</h5><h6>Software for Creating Graph Grammars<br />created by the <a href="http://www.me.utexas.edu/~adl/">Automated Design Lab</a><br />in the <a href="http://www.me.utexas.edu/">Mechanical Engineering Department</a><br />under the direction of <a href="mailto:mc1@mail.utexas.edu?subject=a question/comment about GraphSynth">Dr. Matt Campbell</a><br /></h6></div><div id="navigation"><ul><li><a href="index.htm">Home</a></li><li><a href="gettingStarted.htm">Getting Started</a></li><li><a href="introMethod.htm">Methodology Overview</a></li><li><a href="graphs.htm">Graph Basics</a></li><li><a href="grammars.htm">Grammar Basics</a></li><li><a href="rule_recognition.htm">Grammars: Recognition</a></li><li><a href="rule_application.htm">Grammars: Application</a></li><li><a href="ruleSets.htm">Grammars: Rulesets</a></li><li><a href="generation.htm">Generation</a></li><li><a href="searchProcess.htm">Search Process</a></li><li><a href="navigating.htm">Navigating GraphSynth</a></li><li><a href="examples.htm">Examples</a></li><li><a href="download.htm">Download</a></li></ul><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p></div><div id="content"><h2>Download</h2><h3>Current Version</h3><p>Currently GraphSynth is at version 1.7.1.2. This has been established on the Fourth of July, 2007. All the source code has been written in <a href="http://msdn.microsoft.com/vstudio/">Microsoft Visual Studio .NET</a> - <a href="http://msdn.microsoft.com/vcsharp/">C#</a>. A free C# compiler is available in Microsoft&#39;s <a href="http://msdn.microsoft.com/vstudio/express/visualCsharp/default.aspx">Express Editions</a> (in fact much of GraphSynth was written in this version).</p><p><a href="http://www.me.utexas.edu/~adl/graphsynth/GraphSynth.v.1.7.src.zip">Download the GraphSynth Solution and Source Files</a> </p><p><a href="http://www.me.utexas.edu/~adl/graphsynth/GraphSynth.v.1.7.exe.zip">Download GraphSynth.exe. Installation (does not require Visual Studio, but will prompt you for .Net Framework installation)</a></p><h3>Changes since... </h3><ul><li><strong>GraphSynth 1.7.0.0</strong><br /><span class="style_italic">July 4th, 2007</span> <ul><li>&nbsp;the &quot;time-of-day&quot; (tod) string in save candidates fixed </li><li>annoying checkbox problems in RuleSet list fixed.</li><li>other forgotten fixes...</li></ul></li><li><strong>GraphSynth 1.6.1.9</strong><br /><span class="style_italic">March 10th, 2007</span> <ul><li>The Graphics Library within GraphSynth originated with Netron 2 and has gone under a major renovation. A custom version of that library is now smaller and more efficient especially for larger graphs. The original creator has apparently lost interest in the tool, so we have decided to take it apart and reworked especially for GraphSynth. (Details on where the Graphics Library originated can be found here: <a href="http://sourceforge.net/projects/netron-reloaded">Netron Reloaded</a>).<ul><li>Cut, Paste, Copy, and Delete of nodes and arcs is now possible</li><li>More node types have been added.</li><li>Details about colors, line thicknesses, etc. are now stored compactly with the .xml files.</li></ul></li><li>More layout functions are included, and their functionality seems to be more robust.</li></ul></li><li><strong>GraphSynth 1.6.0.0</strong></li><li><br /><span class="style_italic">November 17th, 2006</span> <ul><li>the PNPPS.cs guidance method is included along with both blind and bestfirst tree searching methods.</li><li>designGraphXMLIO.cs: designGraph.copy didn&#39;t include globalvariables - now it does.</li><li>candidate.cs: The vector of performanceParams is now initially set to double.NaN as opposed to 0.0. This is so that one can better know if a candidate has been previously evaluated or not.</li><li>chooseDisplay.cs: now catches an error when one double-clicks NOT on an option</li><li>option.cs: optionNumber added to candidate</li><li>grammarRuleXMLIO.cs: KarcsChangeDirection was used to see if an arc changed directon between L and R. It was failing with dangling arcs lead to null pointer exception, but now it is fixed. </li><li>TreeLayout in Netron has a buggy PrimsAlgorithm. Patched with a try and catch function. </li></ul></li><li><strong>GraphSynth 1.5.0.0 </strong><br /><span class="style_italic">October 31st, 2006</span><ul><li>generation separated into its own DLL</li><li>candidate.undoLastRule fixed.</li><li>User Choose fixed.</li><li>New layout to user choose. Now the last rule that has been applied can be undone.</li><li>RuleSet number fixed.</li><li>Introduce new static class in Representation: SearchIO. This is intended to be the way in which various functions communicate with the main process and the search process controller.</li><li>These help files have been improved to reflect the changes. See new section at bottom of <a href="searchProcess.htm">Search Process</a>.&nbsp; </li></ul></li><li><strong>GraphSynth 1.1.2.1 </strong><br /><span class="style_italic">September 5th, 2006</span><ul><li>Separate DLLs! The biggest change is to make future updates and sharing of functions easier. There are now separate DLL for various parts of the code.</li><li>In the Recognize-Choose-Apply Cycle, the cycle limit exit is moved from the end of the process (after apply) to the very beginning of the process (see new flowchart on the generation page.</li><li>Print command added – graphs can now be sent to the printer (Courtesy of Chaitanya Vempati).</li><li>“Confirm each user choose” fixed (was false when it meant true).</li><li>New Improved Graph Layout functions and DLL<ul><li>Stop layout menu item removed</li><li>Netron Spring embedder sped up</li><li>Custom layout buttons<ul><li>Only first three public methods under graphLayout will appear in list.</li></ul></li><li>New keyboard shortcuts</li><li>Default layout added to global setting for this as well</li></ul></li><li>Properties window divorces from main when graph window maximized.</li><li>Fixed redraw problem by forcing Netron to redraw at key points in the code.</li><li>Switched order of output and input directories in global settings</li><li>Sped up printing to side bar text box</li><li>Output box now prints downward</li><li>Introduce consoleWriter in Representation DLL</li><li>Starts writing to splash screen</li><li>A warning is added in saving a rule if arc in K are accidently connected up in opposite ways from L to R</li><li>Arc.othernode checks both to and from in case the node is not even known to arc</li><li>Terminate request honored after R, C and A.</li><li>Candidate’s recipe and performance parameters set to public</li><li>RCA now void with since redundant that candidate is passed.</li></ul></li><li><strong>GraphSynth 1.0.2.1 </strong><br /><span class="style_italic">July 14th, 2006</span><ul><li>The main change is the ability to edit settings within GraphSynth.</li><li>A prompt for settings occurs at the onset if no settings file is found.</li><li>Rule set has additional settings for how the Generation process will proceed.</li><li>It is now possible to specify as many as 10 default rulesets compared to the previous 3.</li></ul></li><li><strong>GraphSynth 0.0.0.0 </strong><br /><span class="style_italic">January, 2005</span><ul><li>Too numerous to list. </li></ul></li></ul><h3>Known Issues</h3><ul><li>nodes at the edges of display seem to lock onto a particular horizontal or vertical position.</li></ul><p>Find a Problem? Contact: <a href="mailto:mc1@mail.utexas.edu?subject=GraphSynth%20-%20issue/bug%20report">Dr. Matt Campbell</a>.</p></div><div id="footer"><p><a href="index.htm">Home</a> | <a href="gettingStarted.htm">Getting Started</a> | <a href="introMethod.htm">Methodology Overview</a> | <a href="graphs.htm">Graph Basics</a> | <a href="grammars.htm">Grammar Basics</a> | <a href="rule_recognition.htm">Grammars: Recognition</a> | <a href="rule_application.htm">Grammars: Application</a> | <a href="ruleSets.htm">Grammars: Rulesets</a> | <a href="generation.htm">Generation</a> | <a href="searchProcess.htm">Search Process</a> | <a href="navigating.htm">Navigating GraphSynth</a> | <a href="examples.htm">Examples</a> | <a href="download.htm">Download</a></p></div><div class="bottomLegalities"><br /><br /><br />© 2007, the <a href="http://www.me.utexas.edu/~adl/">Automated Design Laboratory</a>,&nbsp; <a href="http://www.me.utexas.edu/">Mechanical Engineering Department</a> of the <a href="http://www.engr.utexas.edu/">College of Engineering</a> at the <a href="http://www.utexas.edu/">University of Texas at Austin</a>. <br />All rights reserved. This page was last updated on Wednesday, July 4, 2007 by the <a href="mailto:mc1@mail.utexas.edu">Dr. Matt Campbell</a>. </div></div></body></html>