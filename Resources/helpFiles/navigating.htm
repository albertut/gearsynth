<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Navigating GraphSynth</title><style type="text/css">
.style89 {
	font-size: small;
	border-left-style: solid;
	border-left-width: 1px;
	border-top-style: solid;
	border-top-width: 1px;
}
.style2 {
	border-right-style: solid;
	border-right-width: 1px;
	border-top-style: solid;
	border-top-width: 1px;
}
.style3 {
	border-right-style: solid;
	border-right-width: 1px;
	border-bottom-style: solid;
	border-bottom-width: 1px;
}
.style4 {
	font-size: small;
	border-left-style: solid;
	border-left-width: 1px;
	border-bottom-style: solid;
	border-bottom-width: 1px;
}
.style5 {
	border-right-style: solid;
	border-right-width: 1px;
	border-top-style: solid;
	border-top-width: 1px;
	border-bottom-style: solid;
	border-bottom-width: 1px;
}
.style6 {
	font-size: small;
	border-left-style: solid;
	border-left-width: 1px;
	border-top-style: solid;
	border-top-width: 1px;
	border-bottom-style: solid;
	border-bottom-width: 1px;
}
</style>
<link href="styles/graphSynthStyle.css" rel="stylesheet" type="text/css" /><style type="text/css"></style>
</head><body><div id="container"><div id="masthead"><a  style="border-width:0" href="http://www.engr.utexas.edu/"><img alt="UT Austin and the College of Engineering" src="images/UTCOEemblem.jpg" style="float: right" class="UT_COE_emblem" /></a> <h1>GraphSynth</h1><h5>Version 1.7</h5><h6>Software for Creating Graph Grammars<br />created by the <a href="http://www.me.utexas.edu/~adl/">Automated Design Lab</a><br />in the <a href="http://www.me.utexas.edu/">Mechanical Engineering Department</a><br />under the direction of <a href="mailto:mc1@mail.utexas.edu?subject=a question/comment about GraphSynth">Dr. Matt Campbell</a><br /></h6></div><div id="navigation"><ul><li><a href="index.htm">Home</a></li><li><a href="gettingStarted.htm">Getting Started</a></li><li><a href="introMethod.htm">Methodology Overview</a></li><li><a href="graphs.htm">Graph Basics</a></li><li><a href="grammars.htm">Grammar Basics</a></li><li><a href="rule_recognition.htm">Grammars: Recognition</a></li><li><a href="rule_application.htm">Grammars: Application</a></li><li><a href="ruleSets.htm">Grammars: Rulesets</a></li><li><a href="generation.htm">Generation</a></li><li><a href="searchProcess.htm">Search Process</a></li><li><a href="navigating.htm">Navigating GraphSynth</a></li><li><a href="examples.htm">Examples</a></li><li><a href="download.htm">Download</a></li></ul><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p></div><div id="content"><h2>Navigating GraphSynth </h2><h3>File Directory Navigation <em>(folders in italics) </em></h3><ul><li><em>GraphSynth 1.7</em><ul><li><em>input</em> (directory for seed graphs)</li><li><em>output</em> (results saved here from search process)</li><li><em>rules</em> (rules and rule sets saved here)</li><li><em>GraphSynthFiles</em> (main code)<ul><li><em>Application_UI_and_Search</em> - This is the project (GraphSynth.csproj) that is the main .exe of GraphSynth. All other folders compile to dynamic libraries (*.DLL). Consider altering on the <strong>searchProcess.cs</strong> file, which includes the one function that is invoked from the &quot;Run Search Process&quot; function from the <a href="searchProcess.htm">Design pull-down</a>. Versions of this have been written to perform blind search, and best first search (both included here) as well as genetic algorithms and new tree search methods.</li><li><em>Resources</em> (includes pictures, these help files, and the Netron Graphics Library)</li><li><em>bin</em>, <em>obj</em>, and <em>Properties</em> (directories created by Visual Studio, the executable, GraphSynth.exe, and the settings file, <strong>GraphSynthSettings.config</strong> are found in bin\Release\)</li></ul></li><li><em>Representation</em> - includes <strong>grammarRule.cs</strong>, <strong>designGraph.cs</strong>, <strong>node.cs</strong>, <strong>arc.cs</strong>, etc. It is recommended that developers only alter <strong>inheritedGraphClasses.cs</strong> with details on how the <span class="codeInText">node</span>, <span class="codeInText">arc</span>, and <span class="codeInText">designGraph </span>classes are to be altered for the application.)</li><li><em>Generation</em> - Includes <strong>RecognizeChooseApply.cs</strong>, <strong>randomChoose.cs</strong>, and <strong>randomChooseWithUndo.cs</strong>. One may wish to make more intelligent &quot;Generation&quot; methods here.</li><li><em>Evaluation</em> - a placeholder for evaluation methods; includes <strong>EvaluateSwirls.cs</strong>. Place methods and classes here to measure the worth of design created through GraphSynth.</li><li><em>Guidance</em> - a placeholder for guidance methods; includes the optimistic but useless <strong>GetToOptimum.cs</strong>. Developers are encouraged to write their own to be invoked from the aforementioned <strong>searchProcess.cs</strong>.</li><li>GraphLayout - includes a single class/file called <strong>graphLayout.cs</strong> which allows developers to create specific graph layout algorithms within GraphSynth (see file for more details). The folder entitled DefaultAlgorithms contains the six predefined algorithms. </li></ul></li></ul><h3>Drop-Down Menu Navigation </h3><table style="width: 100%"><tr><td style="width: 247px" valign="top" class="style3"><h2>File</h2><ul><li>New<ul><li>Graph (Ctrl+N)</li><li>Grammar Rule (Ctrl+Shift+N)</li><li>Rule Set (Alt+N)</li></ul></li><li>Open (Ctrl+O)</li><li>Save Active (Ctrl+S)</li><li>Close<ul><li>Active Window (Ctrl+W)</li><li>All Open Graphs (Ctrl+Shift+W)</li></ul></li><li></li><li>Print<ul><li>Print Preview (Ctrl+P)</li></ul></li><li>Exit (Alt+X) </li></ul></td><td class="style4" valign="top"><br /><br /><br />Open a new window to create a new graph, rule, or ruleset (set of rules). In drawing a graph or rule, a right click will bring up a context-sensitve menu, and Ctrl+1, 2, 3, 4, or 5 will add different node shapes.<br /><br />Open and save graphs, rules, or rulesets. &quot;Active&quot; refers to the active window in GraphSynth.<br /><br />Close the active window, or all open graphs. This can be handy when running a long generation process.<br /><br /><br /><br />Modify the settings to save time in GraphSynth.<br /><br />A print command is useful to save the graph. It will only send to the default printer. Please set up in advance. </td></tr><tr><td style="width: 247px" valign="top" class="style5"><h3>Edit</h3><ul><li>Force Update &amp; Refresh</li><li>Cut (Ctrl+X)</li><li>Copy&nbsp; (Ctrl+C)</li><li>Paste (Ctrl+V)</li><li>Delete (Del)</li><li>Select All (Ctrl+A)<br /><br /></li><li>adding nodes (not shown)<ul><li>largeCircleNode (Ctrl+1)</li><li>medCircleNode (Ctrl+2)</li><li>smallCircleNode (Ctrl+3)</li><li>ovalNode (Ctrl+4)</li><li>roundtangleNode (Ctrl+5)</li><li>rectangleNode (Ctrl+6)</li><li>squareNode (Ctrl+7)</li></ul></li></ul></td><td class="style6" valign="top"><br /><br />force update and refresh to tie display to xml data. Hopefully it is not necessary to do this manually, but here it is just in case.<br /><br />Cut, Copy, Paste, Delete, Select All - edit functions like you&#39;re used to.<br /><br /><br /><br /><br /><br />Nodes can be added to graphs or rules by these helpful shortcuts. They can also be added by right-clicking and selecting them from the bottom of the pop-up menu. </td></tr><tr><td style="width: 247px" valign="top" class="style5"><h3>View</h3><ul><li>Zoom<ul><li>10% to 400% </li><li>(Ctrl+Z - zoom in)</li><li>(Alt+Z - zoom out)</li><li>(Ctrl+Shift+Z <br />&nbsp; - zoom to 100%)</li></ul></li><li>Text (Ctrl+T to reset)<ul><li>Hide (Ctrl+H)</li><li>Shrink Text (Ctrl+F)</li><li>Enlarge Text (Ctrl+G) </li></ul></li><li>Graph Layout<ul><li>Randomizer (Alt+1)</li><li>Force-Directed (Alt+2)</li><li>Fruchterman-Reingold Algorithm (Alt+3)</li><li>Cartesian Layout (Alt+4)</li><li>Balloon Tree (Alt+5)</li><li>Radial Tree (Alt+6)</li><li>Custom 1 Layout(Alt+7)</li><li>Custom 2 Layout(Alt+8)</li><li>Custom 3 Layout(Alt+9)</li><li>Undo Last Layout (Alt+0)</li></ul></li><li>Windows<ul><li>Cascade</li><li>Tile Horizontally</li><li>Tile Vertically </li></ul></li></ul></td><td class="style6" valign="top"><br /><br /><br />Set a zoom for the current graph or rule. Within a rule, click on either the left-hand-side or the right-hand-side to apply the zoom.<br /><br /><br /><br /><br /><br />Node and arc names can busy up a graph. Quickly hide them or shrink them with these commands. Also when zoomed out, the enlarge text is useful. The three shortcuts are adjacent, so feel free to adjust randomly.<br /><br /><br />Here are three generic layout algorithms and (up to) three custom layout algorithms that you can write in the graphLayout.cs file. The actual names of the functions will be shown here.<br /><br /><br /><br /><br /><br /><br /><br />Manage multiple docked windows with these handy windows layout methods. </td></tr><tr><td style="width: 247px" valign="top" class="style5"><h3>Design</h3><ul><li>Set Active as Seed (Alt+D)</li><li>Set Active as Rule Set #0 (Alt+0)</li><li>Set Active as Rule Set #1 (Alt+1)</li><li>...</li><li>Set Active as Rule Set #9 (Alt+9)</li><li>Clear All Rule Sets and Seed</li></ul><p>&nbsp;</p><ul><li>Run Search Process (Ctrl+Spacebar)<br /></li><li>Recognize<span class="inlineArialArrow">→</span>User Choose<span class="inlineArialArrow"> →</span>Apply (Ctrl+U)<br /></li><li>Recognize<span class="inlineArialArrow">→</span>Random Choose<span class="inlineArialArrow"> →</span>Apply (Ctrl+R)</li><li>#steps (for Random Choose) </li></ul></td><td class="style6" valign="top">Before a generation process can be initiated, we must specify the seed graph and the rulesets. This is best done by fixing the settings so that the seed and rulesets are loaded at the beginning of the program. But if this is not done, then we can use active windows in GraphSynth to set this up. <br /><br />The seed can only be applied to a graph, and it is possible to set as many as 10 active rule sets. The number of items that appears depends on what put in &quot;# of RuleSets&quot; in settings. These can be changed dynamically. Finally, we can clear all the prescribed rulesets and seeds with this final command. <br /><br /><br />This simply invokes the custom search process that you is contained in searchProcess.cs. <br /><br /><br />To test the generation with a pop-up showing the list of option, call this function. <br /><br /><br />Invoking this will randomly call options until the process ends. Beware, in many cases, there is no end, unless no more rules are recognized or the cycle limit is reached (&quot;Max # of Rules to Apply in the settings dialog). To invoke the random process for a fixed set of rule call, fill in values in the #steps box. Note: you need a limit for each rule set. Separate values with a space or comma.&nbsp; </td></tr><tr><td style="width: 247px" valign="top" class="style2"><h3>Help</h3><ul><li>Help (F1)<br /></li><li>About GraphSynth </li></ul></td><td class="style89"><br /><br />The help menu item simply opens a browser to this series of pages (sorry, that&#39;s all folks!)<br /><br />Click on the &quot;About GraphSynth&quot; tab to see the splash and get to links to our site.</td></tr></table></div><div id="footer"><p><a href="index.htm">Home</a> | <a href="gettingStarted.htm">Getting Started</a> | <a href="introMethod.htm">Methodology Overview</a> | <a href="graphs.htm">Graph Basics</a> | <a href="grammars.htm">Grammar Basics</a> | <a href="rule_recognition.htm">Grammars: Recognition</a> | <a href="rule_application.htm">Grammars: Application</a> | <a href="ruleSets.htm">Grammars: Rulesets</a> | <a href="generation.htm">Generation</a> | <a href="searchProcess.htm">Search Process</a> | <a href="navigating.htm">Navigating GraphSynth</a> | <a href="examples.htm">Examples</a> | <a href="download.htm">Download</a></p></div><div class="bottomLegalities"><br /><br /><br />© 2007, the <a href="http://www.me.utexas.edu/~adl/">Automated Design Laboratory</a>,&nbsp; <a href="http://www.me.utexas.edu/">Mechanical Engineering Department</a> of the <a href="http://www.engr.utexas.edu/">College of Engineering</a> at the <a href="http://www.utexas.edu/">University of Texas at Austin</a>. <br />All rights reserved. This page was last updated on Wednesday, July 4, 2007 by the <a href="mailto:mc1@mail.utexas.edu">Dr. Matt Campbell</a>. </div></div></body></html>